name: ubuntu-build

on:
  workflow_dispatch:
  pull_request:
  push:

concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    name: ubuntu-build
    steps:
      - name: Show env
        run: env

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: src/ardupilot_ros2

      - name: Install Build Dependencies
        shell: bash
        run: |
          sudo apt update && sudo apt install --no-install-recommends -y \
          cmake \
          make \
          wget \
          lsb-release \
          gnupg \
          curl \
          socat

      - name: Show Python version and platform info
        run: |
          python --version
          python -m platform

      - name: Show CMake version
        run: cmake --version

      - name: Install Build Tools
        run: |
          sudo sh -c 'echo "deb http://packages.ros.org/ros2/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros2-latest.list'
          curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
          sudo apt update && sudo apt install --no-install-recommends -y \
          python3-pip \
          python3-vcstool \
          python3-colcon-common-extensions

      - name: Install ROS Humble
        run: |
          sudo add-apt-repository universe
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          sudo apt update && sudo apt upgrade && sudo apt install -y \
          ros-humble-ros-base \
          ros-humble-launch-pytest \
          ros-dev-tools

      - name: Install ArduPilot dependencies
        run: |
          python -m pip install -U \
          future \
          MAVProxy \
          pymavlink

      - name: Get ROS dependencies
        run: |
          pushd src
          wget https://raw.githubusercontent.com/srmainwaring/ardupilot/wip/ros2-pkg-cmake/Tools/scripts/ros2/ros2.repos
          vcs import --recursive --skip-existing < ros2.repos
          popd

      - name: Build microxrcedds_gen
        run: |
          pushd src/microxrcedds_gen
          ./gradlew assemble
          popd

      - name: Build
        run: |
          source /opt/ros/humble/setup.bash
          export PATH=$PATH:$(pwd)/src/microxrcedds_gen/scripts
          colcon build

      - name: Test
        run: |
          source /opt/ros/humble/setup.bash
          export PATH=$PATH:$(pwd)/src/microxrcedds_gen/scripts
          colcon test --pytest-args -s -v \
          --event-handlers console_cohesion+ \
          --packages-select ap_ci_tests

      - name: Test Launch
        run: |
          mkdir -p dev
          source ./install/setup.bash
          export PATH=$PATH:$(pwd)/src/microxrcedds_gen/scripts
          ros2 launch ap_ci_tests ap_ci_test.launch.py

